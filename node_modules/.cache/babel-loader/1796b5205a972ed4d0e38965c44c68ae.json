{"ast":null,"code":"var _jsxFileName = \"/Users/aqutor/Dev/SMangerPanel/src/Component/LoginForm/LoginForm.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './LoginForm.css';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      password: null,\n      pwdVal: null,\n      ifClicked: false,\n      info: null,\n      SubmitText: '提交'\n    };\n\n    this.usernameChangeHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.passwordChangeHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.postCredHandler = () => {\n      this.setState({\n        ifClicked: true\n      });\n      const postData = {\n        sid: this.state.username,\n        pwd: this.state.password\n      };\n      axios.post('https://smp-api.cloud.airscr.com/api/login', postData).then(res => {\n        this.setState({\n          info: res.data\n        });\n\n        if (this.state.info.code !== 200) {\n          this.setState({\n            ifClicked: false,\n            pwdVal: false\n          });\n        } else if (this.state.info.code === 200) {\n          this.setState({\n            pwdVal: true\n          });\n        }\n\n        console.log(\"RESPONSE RECEIVED: \", this.state.info);\n        console.log(res);\n      }).catch(err => {\n        console.log(\"AXIOS ERROR: \", err);\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.ifClicked && this.state.SubmitText === '提交') {\n      this.setState({\n        SubmitText: '请稍等...'\n      });\n    }\n\n    if (!this.state.ifClicked && this.state.SubmitText === '请稍等...') {\n      this.setState({\n        SubmitText: '提交'\n      });\n    }\n  }\n\n  render() {\n    const PwdInfo = () => {\n      if (this.state.pwdVal !== null) {\n        if (this.state.pwdVal) {\n          return React.createElement(Alert, {\n            variant: \"success\",\n            className: \"InFormAlert\",\n            id: \"alertLoginSuccess\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \" hey, u r good to go.\");\n        } else {\n          return React.createElement(Alert, {\n            variant: \"danger\",\n            className: \"InFormAlert\",\n            id: \"alertLoginFail\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \" hey, u'd better check your info again.\");\n        }\n      }\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      className: \"InFormAlert\",\n      variant: \"warning\",\n      id: \"alertConstuction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" The site is still under constuction.\"), React.createElement(Alert, {\n      className: \"InFormAlert\",\n      variant: \"info\",\n      id: \"alertBrowser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u767B\\u5F55 - \\u6668\\u8DD1\\u7BA1\\u7406\\u7CFB\\u7EDF\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" \"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"\\u5B66\\u53F7\",\n      onChange: event => this.usernameChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      onChange: event => this.passwordChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      variant: \"primary\",\n      onClick: this.postCredHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.SubmitText), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801?\"), PwdInfo));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/aqutor/Dev/SMangerPanel/src/Component/LoginForm/LoginForm.js"],"names":["React","Component","Form","Button","Alert","axios","LoginForm","state","username","password","pwdVal","ifClicked","info","SubmitText","usernameChangeHandler","event","setState","target","value","passwordChangeHandler","postCredHandler","postData","sid","pwd","post","then","res","data","code","console","log","catch","err","componentDidUpdate","render","PwdInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './LoginForm.css';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\n\n\nclass LoginForm extends Component {\n\n    state = {\n        username: null,\n        password: null,\n        pwdVal: null,\n        ifClicked: false,\n        info: null,\n        SubmitText: '提交',\n    }\n    \n    usernameChangeHandler = (event) => {\n        this.setState({\n            username: event.target.value,\n        })\n    }\n\n    passwordChangeHandler = (event) => {\n        this.setState({\n            password: event.target.value,\n        })\n    }\n\n    \n\n\n    postCredHandler = () => {\n        this.setState({\n            ifClicked: true,\n        });\n\n        const postData = {\n            sid: this.state.username,\n            pwd: this.state.password,\n        }\n\n        axios.post('https://smp-api.cloud.airscr.com/api/login', postData)\n            .then((res) => {\n                this.setState({\n                    info: res.data,\n                })\n\n                if (this.state.info.code !== 200){\n                    this.setState({\n                        ifClicked: false,\n                        pwdVal: false,\n                    })\n                }\n                else if(this.state.info.code === 200){\n                    this.setState({\n                        pwdVal: true,\n                    })\n                }\n\n                \n                console.log(\"RESPONSE RECEIVED: \", this.state.info);\n                console.log(res);\n              })\n              .catch((err) => {\n                \n                console.log(\"AXIOS ERROR: \", err);\n              })\n\n    }\n\n\n    \n    componentDidUpdate(){\n        if(this.state.ifClicked && this.state.SubmitText === '提交'){\n            this.setState({\n                SubmitText: '请稍等...',\n            })\n        }\n\n        if(!this.state.ifClicked && this.state.SubmitText === '请稍等...'){\n            this.setState({\n                SubmitText: '提交',\n            })\n        }\n    }\n\n    \n    \n\n    render() {\n        const PwdInfo = () => {\n            if (this.state.pwdVal !== null){\n                if(this.state.pwdVal){\n                    return(\n                        <Alert variant = 'success' className = 'InFormAlert' id = 'alertLoginSuccess' > hey, u r good to go.</Alert>\n                    )\n                }\n                else{\n                    return(\n                        <Alert variant = 'danger' className = 'InFormAlert' id = 'alertLoginFail' > hey, u'd better check your info again.</Alert> \n                    )\n                }\n            }\n        }\n\n        return (\n            <div>\n                <Alert className = 'InFormAlert' variant = 'warning' id = 'alertConstuction'> The site is still under constuction.</Alert>\n                <Alert className = 'InFormAlert' variant = 'info' id = 'alertBrowser'> Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.</Alert>\n                \n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <h1>登录 - 晨跑管理系统</h1>\n                        <h1> </h1>\n                        <Form.Control type=\"text\" placeholder=\"学号\" onChange = {(event) => this.usernameChangeHandler(event)} />\n                    </Form.Group>    \n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control type=\"password\" placeholder=\"密码\" onChange = {(event) => this.passwordChangeHandler(event)} />\n                    </Form.Group>\n                        <Button block variant=\"primary\" onClick = {this.postCredHandler}>\n                            {this.state.SubmitText}\n                        </Button>\n                        <p></p>\n                        <Form.Text className=\"text-muted\" >\n                            忘记密码?\n                        </Form.Text>\n                        {PwdInfo}\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}