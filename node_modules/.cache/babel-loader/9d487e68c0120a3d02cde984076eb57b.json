{"ast":null,"code":"import _classCallCheck from\"/Users/aqutor/Dev/SMangerPanel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/aqutor/Dev/SMangerPanel/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/aqutor/Dev/SMangerPanel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/aqutor/Dev/SMangerPanel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/aqutor/Dev/SMangerPanel/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'bootstrap/dist/css/bootstrap.min.css';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import'./LoginForm.css';import Alert from'react-bootstrap/Alert';import axios from'axios';var LoginForm=/*#__PURE__*/function(_Component){_inherits(LoginForm,_Component);function LoginForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,LoginForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={username:null,password:null,pwdVal:null,ifClicked:false,valAlert:{type:null,msg:null},SubmitText:'提交'};_this.usernameChangeHandler=function(event){_this.setState({username:event.target.value});};_this.passwordChangeHandler=function(event){_this.setState({password:event.target.value});};_this.postCredHandler=function(){_this.setState({ifClicked:true});var postData={sid:_this.state.username,pwd:_this.state.password};axios.post('https://smp-api.cloud.airscr.com/api/login',postData).then(function(res){_this.setState({info:res.data});if(_this.state.info.code!==200){_this.setState({ifClicked:false,pwdVal:false});}else if(_this.state.info.code===200){_this.setState({pwdVal:true});}console.log(\"RESPONSE RECEIVED: \",_this.state.info);console.log(res);}).catch(function(err){console.log(\"AXIOS ERROR: \",err);});};return _this;}_createClass(LoginForm,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.state.ifClicked&&this.state.SubmitText==='提交'){this.setState({SubmitText:'请稍等...'});}if(!this.state.ifClicked&&this.state.SubmitText==='请稍等...'){this.setState({SubmitText:'提交'});}if(this.state.valAlert.type===null&&this.state.valAlert.type!=='success'&&this.state.valAlert.type!=='danger'&&this.state.pwdVal===true){this.setState({valAlert:{type:'success',msg:'hey, u r good to go. Note: This notice will not be included in the final version.'}});}if(this.state.valAlert.type===null&&this.state.valAlert.type!=='success'&&this.state.valAlert.type!=='danger'&&this.state.pwdVal===false){this.setState({valAlert:{type:'danger',msg:'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'}});}if(this.state.valAlert.type==='success'&&this.state.pwdVal===false){this.setState({valAlert:{type:'danger',msg:'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'}});}if(this.state.valAlert.type==='danger'&&this.state.pwdVal===true){this.setState({valAlert:{type:'success',msg:'hey, u r good to go. Note: This notice will not be included in the final version.'}});}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Alert,{className:\"InFormAlert\",variant:\"warning\",id:\"alertConstuction\"},\" The site is still under constuction.\",React.createElement(\"br\",null),\" \",React.createElement(\"strong\",null,\"Note\"),\": Now user credentials can be validated on this \",React.createElement(\"em\",null,\"single page\"),\". If the credentials are correct, the button text would not be modified which is set on purpose. For the final version, the page will be redirected to the next page.\"),React.createElement(Alert,{className:\"InFormAlert\",variant:\"info\",id:\"alertBrowser\"},\" Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.\"),React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"formBasicEmail\"},React.createElement(\"h1\",null,\"\\u767B\\u5F55 - \\u6668\\u8DD1\\u7BA1\\u7406\\u7CFB\\u7EDF\"),React.createElement(\"h1\",null,\" \"),React.createElement(Form.Control,{type:\"text\",placeholder:\"\\u5B66\\u53F7\",onChange:function onChange(event){return _this2.usernameChangeHandler(event);}})),React.createElement(Form.Group,{controlId:\"formBasicPassword\"},React.createElement(Form.Control,{type:\"password\",placeholder:\"\\u5BC6\\u7801\",onChange:function onChange(event){return _this2.passwordChangeHandler(event);}})),React.createElement(Button,{block:true,variant:\"primary\",onClick:this.postCredHandler},this.state.SubmitText),React.createElement(\"p\",null),React.createElement(Form.Text,{className:\"text-muted\"},\"\\u5FD8\\u8BB0\\u5BC6\\u7801?\")),React.createElement(Alert,{variant:this.state.valAlert.type,className:\"InFormAlert\",id:\"pwdAlertInfo\"},\" \",this.state.valAlert.msg));}}]);return LoginForm;}(Component);export default LoginForm;","map":{"version":3,"sources":["/Users/aqutor/Dev/SMangerPanel/src/Component/LoginForm/LoginForm.js"],"names":["React","Component","Form","Button","Alert","axios","LoginForm","state","username","password","pwdVal","ifClicked","valAlert","type","msg","SubmitText","usernameChangeHandler","event","setState","target","value","passwordChangeHandler","postCredHandler","postData","sid","pwd","post","then","res","info","data","code","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './LoginForm.css';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\n\n\nclass LoginForm extends Component {\n\n    state = {\n        username: null,\n        password: null,\n        pwdVal: null,\n        ifClicked: false,\n        valAlert: {\n            type: null,\n            msg: null,\n        },\n        SubmitText: '提交',\n        \n    }\n    \n    usernameChangeHandler = (event) => {\n        this.setState({\n            username: event.target.value,\n        })\n    }\n\n    passwordChangeHandler = (event) => {\n        this.setState({\n            password: event.target.value,\n        })\n    }\n\n    \n\n\n    postCredHandler = () => {\n        this.setState({\n            ifClicked: true,\n        });\n\n        const postData = {\n            sid: this.state.username,\n            pwd: this.state.password,\n        }\n\n        axios.post('https://smp-api.cloud.airscr.com/api/login', postData)\n            .then((res) => {\n                this.setState({\n                    info: res.data,\n                })\n\n                if (this.state.info.code !== 200){\n                    this.setState({\n                        ifClicked: false,\n                        pwdVal: false,\n                    })\n                }\n                else if(this.state.info.code === 200){\n                    this.setState({\n                        pwdVal: true,\n                    })\n                }\n\n                \n                console.log(\"RESPONSE RECEIVED: \", this.state.info);\n                console.log(res);\n              })\n              .catch((err) => {\n                \n                console.log(\"AXIOS ERROR: \", err);\n              })\n\n    }\n\n\n    \n    componentDidUpdate(){\n        if(this.state.ifClicked && this.state.SubmitText === '提交'){\n            this.setState({\n                SubmitText: '请稍等...',\n            })\n        }\n\n        if(!this.state.ifClicked && this.state.SubmitText === '请稍等...'){\n            this.setState({\n                SubmitText: '提交',\n            })\n        }\n\n        if(this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === true){\n            this.setState({\n                valAlert: {\n                    type: 'success',\n                    msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n                }\n            })            \n        }\n\n        if(this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === false){\n            this.setState({\n                valAlert: {\n                    type: 'danger',\n                    msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n                }\n            })            \n        }\n\n        if(this.state.valAlert.type === 'success' && this.state.pwdVal === false){\n            this.setState({\n                valAlert: {\n                    type: 'danger',\n                    msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n                }\n            }) \n        }\n\n        if(this.state.valAlert.type === 'danger' && this.state.pwdVal === true){\n            this.setState({\n                valAlert: {\n                    type: 'success',\n                    msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n                }\n            }) \n        }\n    }\n\n    \n    \n\n    render() {\n\n        return (\n            <div>\n                <Alert className = 'InFormAlert' variant = 'warning' id = 'alertConstuction'> The site is still under constuction.<br></br> <strong>Note</strong>: Now user credentials can be validated on this <em>single page</em>. If the credentials are correct, the button text would not be modified which is set on purpose. For the final version, the page will be redirected to the next page.</Alert>\n                <Alert className = 'InFormAlert' variant = 'info' id = 'alertBrowser'> Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.</Alert>\n                \n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <h1>登录 - 晨跑管理系统</h1>\n                        <h1> </h1>\n                        <Form.Control type=\"text\" placeholder=\"学号\" onChange = {(event) => this.usernameChangeHandler(event)} />\n                    </Form.Group>    \n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control type=\"password\" placeholder=\"密码\" onChange = {(event) => this.passwordChangeHandler(event)} />\n                    </Form.Group>\n                        <Button block variant=\"primary\" onClick = {this.postCredHandler}>\n                            {this.state.SubmitText}\n                        </Button>\n                        <p></p>\n                        <Form.Text className=\"text-muted\" >\n                            忘记密码?\n                        </Form.Text>\n                </Form>\n                <Alert variant = {this.state.valAlert.type} className = 'InFormAlert' id='pwdAlertInfo' > {this.state.valAlert.msg}</Alert>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}