{"ast":null,"code":"var _jsxFileName = \"/Users/aqutor/Dev/SMangerPanel/src/Container/Login/Login.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Login.css';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: null,\n      password: null,\n      pwdVal: null,\n      ifClicked: false,\n      valAlert: {\n        type: null,\n        msg: null\n      },\n      SubmitText: '提交'\n    };\n\n    this.usernameChangeHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.passwordChangeHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.postCredHandler = () => {\n      this.setState({\n        ifClicked: true\n      });\n      const postData = {\n        sid: this.state.username,\n        pwd: this.state.password\n      };\n      axios.post('/api/login', postData).then(res => {\n        this.setState({\n          info: res.data\n        });\n\n        if (this.state.info.code !== 200) {\n          this.setState({\n            ifClicked: false,\n            pwdVal: false\n          });\n        } else if (this.state.info.code === 200) {\n          this.setState({\n            pwdVal: true\n          });\n          const userInfo = this.state.info.data;\n          this.props.infoCallback(userInfo);\n          console.log('[userInfo]', userInfo);\n        }\n\n        console.log(\"RESPONSE RECEIVED: \", this.state.info);\n        console.log(res);\n      }).catch(err => {\n        console.log(\"AXIOS ERROR: \", err);\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.ifClicked && this.state.SubmitText === '提交') {\n      this.setState({\n        SubmitText: '请稍等...'\n      });\n    }\n\n    if (!this.state.ifClicked && this.state.SubmitText === '请稍等...') {\n      this.setState({\n        SubmitText: '提交'\n      });\n    }\n\n    if (this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === true) {\n      this.setState({\n        valAlert: {\n          type: 'success',\n          msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n        }\n      });\n    }\n\n    if (this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === false) {\n      this.setState({\n        valAlert: {\n          type: 'danger',\n          msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n        }\n      });\n    }\n\n    if (this.state.valAlert.type === 'success' && this.state.pwdVal === false) {\n      this.setState({\n        valAlert: {\n          type: 'danger',\n          msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n        }\n      });\n    }\n\n    if (this.state.valAlert.type === 'danger' && this.state.pwdVal === true) {\n      this.setState({\n        valAlert: {\n          type: 'success',\n          msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n        }\n      });\n    }\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.valAlert.type === 'success') {\n      redirect = React.createElement(Redirect, {\n        to: \"/Portal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, redirect, React.createElement(Alert, {\n      className: \"InFormAlert\",\n      variant: \"warning\",\n      id: \"alertConstuction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \" The site is still under constuction.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Note\"), \": Now user credentials can be validated on this \", React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"single page\"), \". If the credentials are correct, the button text would not be modified which is set on purpose. For the final version, the page will be redirected to the next page.\"), React.createElement(Alert, {\n      className: \"InFormAlert\",\n      variant: \"info\",\n      id: \"alertBrowser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \" Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\u767B\\u5F55 - \\u6668\\u8DD1\\u7BA1\\u7406\\u7CFB\\u7EDF\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" \"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"\\u5B66\\u53F7\",\n      onChange: event => this.usernameChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      onChange: event => this.passwordChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(Button, {\n      block: true,\n      variant: \"primary\",\n      onClick: this.postCredHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.SubmitText), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801?\")), React.createElement(Alert, {\n      variant: this.state.valAlert.type,\n      className: \"InFormAlert\",\n      id: \"pwdAlertInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" \", this.state.valAlert.msg));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/aqutor/Dev/SMangerPanel/src/Container/Login/Login.js"],"names":["React","Component","Form","Button","Alert","axios","Redirect","Login","state","username","password","pwdVal","ifClicked","valAlert","type","msg","SubmitText","usernameChangeHandler","event","setState","target","value","passwordChangeHandler","postCredHandler","postData","sid","pwd","post","then","res","info","data","code","userInfo","props","infoCallback","console","log","catch","err","componentDidUpdate","render","redirect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Login.css';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Login extends Component {\n\n    state = {\n        username: null,\n        password: null,\n        pwdVal: null,\n        ifClicked: false,\n        valAlert: {\n            type: null,\n            msg: null,\n        },\n        SubmitText: '提交',\n        \n    }\n    \n    usernameChangeHandler = (event) => {\n        this.setState({\n            username: event.target.value,\n        })\n    }\n\n    passwordChangeHandler = (event) => {\n        this.setState({\n            password: event.target.value,\n        })\n    }\n\n    \n\n\n    postCredHandler = () => {\n        this.setState({\n            ifClicked: true,\n        });\n\n        const postData = {\n            sid: this.state.username,\n            pwd: this.state.password,\n        }\n\n        axios.post('/api/login', postData)\n            .then((res) => {\n                this.setState({\n                    info: res.data,\n                })\n\n                if (this.state.info.code !== 200){\n                    this.setState({\n                        ifClicked: false,\n                        pwdVal: false,\n                    })\n                }\n                else if(this.state.info.code === 200){\n                    \n                    this.setState({\n                        pwdVal: true,\n                    });\n                    const userInfo = this.state.info.data;\n                    this.props.infoCallback(userInfo);\n                    console.log('[userInfo]', userInfo);\n                }\n\n                \n                console.log(\"RESPONSE RECEIVED: \", this.state.info);\n                console.log(res);\n              })\n              .catch((err) => {\n                \n                console.log(\"AXIOS ERROR: \", err);\n              })\n\n    }\n\n\n    \n    componentDidUpdate(){\n        if(this.state.ifClicked && this.state.SubmitText === '提交'){\n            this.setState({\n                SubmitText: '请稍等...',\n            })\n        }\n\n        if(!this.state.ifClicked && this.state.SubmitText === '请稍等...'){\n            this.setState({\n                SubmitText: '提交',\n            })\n        }\n\n        if(this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === true){\n            \n            this.setState({\n                valAlert: {\n                    type: 'success',\n                    msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n                }\n            })            \n        }\n\n        if(this.state.valAlert.type === null && this.state.valAlert.type !== 'success' && this.state.valAlert.type !== 'danger' && this.state.pwdVal === false){\n            this.setState({\n                valAlert: {\n                    type: 'danger',\n                    msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n                }\n            })            \n        }\n\n        if(this.state.valAlert.type === 'success' && this.state.pwdVal === false){\n            this.setState({\n                valAlert: {\n                    type: 'danger',\n                    msg: 'hey, u\\'d better check your info again. Note: This notice will not be included in the final version.'\n                }\n            }) \n        }\n\n        if(this.state.valAlert.type === 'danger' && this.state.pwdVal === true){\n            this.setState({\n                valAlert: {\n                    type: 'success',\n                    msg: 'hey, u r good to go. Note: This notice will not be included in the final version.'\n                }\n            }) \n        }\n    }\n\n    \n    \n\n    render() {\n        let redirect = null;\n        if(this.state.valAlert.type === 'success'){\n            redirect = <Redirect to=\"/Portal\" />;\n        }\n        \n\n        return (\n            \n            <div>\n                {redirect}\n                <Alert className = 'InFormAlert' variant = 'warning' id = 'alertConstuction'> The site is still under constuction.<br></br> <strong>Note</strong>: Now user credentials can be validated on this <em>single page</em>. If the credentials are correct, the button text would not be modified which is set on purpose. For the final version, the page will be redirected to the next page.</Alert>\n                <Alert className = 'InFormAlert' variant = 'info' id = 'alertBrowser'> Internet Explorer is not supported. For better performance, browsers based on the Chromium core is recommended.</Alert>\n                \n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <h1>登录 - 晨跑管理系统</h1>\n                        <h1> </h1>\n                        <Form.Control type=\"text\" placeholder=\"学号\" onChange = {(event) => this.usernameChangeHandler(event)} />\n                    </Form.Group>    \n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Control type=\"password\" placeholder=\"密码\" onChange = {(event) => this.passwordChangeHandler(event)} />\n                    </Form.Group>\n                        <Button block variant=\"primary\" onClick = {this.postCredHandler}>\n                            {this.state.SubmitText}\n                        </Button>\n                        <p></p>\n                        <Form.Text className=\"text-muted\" >\n                            忘记密码?\n                        </Form.Text>\n                </Form>\n                <Alert variant = {this.state.valAlert.type} className = 'InFormAlert' id='pwdAlertInfo' > {this.state.valAlert.msg}</Alert>\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}